@extends('layouts.app')

@section('title')
انواع اسلات توسعه و تفاوت آن‌ها
@endsection

@section('description')

@endsection

@section('content')
    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                @include('includes.tutorial_side_nav')
            </div>
            
            <div class="col-sm-9 page-content">
                <h3>حافظه‌ی کش پردازنده</h3>
                <p>
                        پردازنده سریع‌ترین قطعه در کامپیوتر است. وقتی یک قطعه‌ی کم سرعت با پردازنده ارتباط برقرار می‌کند، <a href="">پردازنده</a> سرعت خود را <b>کاهش نمی‌دهد</b> بلکه با انجام یک عملیات، در حالت انتظار (wait state) می‌ماند تا قطعه‌ی کند عملیاتش را انجام دهد. 
                </p>
                <img class="img-responsive" alt="پردازنده" style="max-width:600px;" src="/images/md/cpu/پردازنده-اینتل.jpg">
                <p>
                        یکی از قطعه‌هایی که پردازنده بیشترین تبادل اطلاعات با آن را دارد <a href="">RAM</a> می‌باشد. زمانی که پردازنده می‌خواهد به RAM دسترسی داشته باشد؛ شروع به قرار دادن آدرس اطلاعات درخواست شده بروی گذرگاه آدرس می‌نماید، حال (بدلیل <b>سرعت پایین</b> RAM نسبت به پردازنده) باید صبر نماید و ممکن است این چرخه‌ی انتظار برای هر داده هزاران بار ادامه یابد. برای رفع این مشکل از <b>حافظه‌ی کش</b> (Cache) یا پنهان استفاده می‌شود.
                </p>
                <p>
                        حافظه‌ی کش، <b>حافظه‌ای پرسرعت</b> (بسیار سریع‌تر از RAM) است که بین RAM و پردازنده قرار می‌گیرد. این این حافظه، داده‌‌های RAM که بیشتر به وسیله‌ی پردازنده مورد استفاده قرار میگیرند، همراه با نشانی محل ذخیره‌ی آن‌ها در خود ذخیره می‌کند. وقتی پردازنده می‌خواهد به داده یا دستورالعملی دسترسی پیدا کند، ابتدا <b>کش را بررسی می‌کند</b>، چنانچه داده مورد نظر (نشانی داده) موجود باشد داده‌ها از این حافظه‌ی پرسرعت به پردازنده تحویل داده می‌شوند. در غیر اینصورت دستیابی معمولی از RAM صورت می‌گیرد.
                </p>
                <p>
                        بیش از <b>۸۰ درصد</b> تخمین‌ها درست است و داده‌‌‌ها وشیوه‌نامه‌های Cache شده، دوباره به وسیله‌ی پردازنده مورد استفاده قرار می‌گیرند. بدین صورت حافظه‌ی کش باعث می‌شود تا سرعت دسترسی پردازنده به حافظه‌ی RAM افزایش یابد.
                </p>
                <h4>کش‌های چند سطحی</h4>
                <p>
                        در کامپیوتر‌های امروزی از معماری کش چند سطحی (multi-level cache) استفاده می‌شود. به این معنی که به جای استفاده از یک حافظه کش از <b>چندین سطح</b> از حافظه کش با سرعت‌های مختلف استفاده می‌شود.
                </p>
                <ul class="custom-list">
                    <li>حافظه‌های کش <b>سطح اول</b> (L1) دارای <b>سرعت بالا و قیمت زیادی</b> دارند و بدون تاخیر با پردازنده در ارتباط هستند. بدلیل قیمت بالا ظرفیت L1 کم می‌باشد. (بین ۸ تا ۱۲۸ کیلو بایت)</li>
                    <li>حافظه‌های کش <b>سطح دوم</b> (L2) سرعت کمتری نسبت به L1 داشته و ارزانتر هستند و ظرفیت آن‌‌ها بین ۱۲۸ کیلوبایت تا ۱۲ مگابایت است.</li>
                    <li>در برخی پردازنده‌های از حافظه‌ی کش <b>سطح سوم</b> (L3) نیز استفاده می‌شود که <b>کم سرعت ترین</b> حافظه‌ی کش می‌باشد. (از RAM به مراتب سریع‌تر است) و قیمت پایین‌تر و حافظه‌ی بیشتری (بین ۲ مگابایت تا چندین مگابایت) نسبت به L2 دارد.</li>
                </ul>
                <p>
                        نحوه‌ی تعامل پردازنده با کش چند سطحی به این صورت است که، پردازنده ابتدا کش نوع L1 و در صورت نبود داده‌ها، کش نوع L2 و در صورت عدم وجود داده‌‌ها در آن، کش نوع L3 را بررسی می‌نماید و در نهایت اگر داده‌‌ها در آن‌جا نیز نباشد، دست‌یابی به RAM به صورت عادی انجام می‌پذیرد.
                </p>
                <img class="img-responsive" alt="حافظه کش پردازنده‌های چند هسته‌ای" style="max-width:600px;" src="/images/md/cpu/حافظه-کش-پردازنده.jpg">
                <p>
                    <span class="glyphicon glyphicon-zoom-in"></span>در <a href="">پردازنده‌ها چند هسته‌ای</a> (multi-core) امروزی، معمولا <b>هر هسته</b> (core) دارای کش نوع L1 و L2 مستقل می‌باشد و کل پردازنده نیز دارای کش نوع L3 می‌باشد که <b>به طور مشترک</b> توسط تمامی هسته‌ها مورد استفاده قرار می‌گیرد.
                </p>
                {{--  related links  --}}
                <div id="related-links">

                </div>
                 
                
            </div>
        </div>
    </div>
@endsection